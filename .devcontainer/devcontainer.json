// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/rust
{
    "name": "CurlyMemory Rust Dev",
    // Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
    // "image": "mcr.microsoft.com/devcontainers/rust:1-1-bullseye",
    // "build": {
    // 	"dockerfile": "Dockerfile"
    // },
    "dockerComposeFile": "docker-compose.yml",
    "service": "devcontainer",
    "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
    // Use 'mounts' to make the cargo cache persistent in a Docker Volume.
    "mounts": [
        {
            "source": "devcontainer-cargo-cache-${devcontainerId}",
            "target": "/usr/local/cargo",
            "type": "volume"
        }
    ],
    // Features to add to the dev container. More info: https://containers.dev/features.
    // "features": {},
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    "forwardPorts": [
        8000,
        5432,
        6379
    ],
    // Use 'postCreateCommand' to run commands after the container is created.
    "postCreateCommand": "SKIP_DOCKER=y ${containerWorkspaceFolder}/scripts/init_db.sh",
    // Configure tool-specific properties.
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-azuretools.vscode-docker",
                "pflannery.vscode-versionlens",
                "mtxr.sqltools",
                "mtxr.sqltools-driver-pg"
            ]
        }
    },
    // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
    "remoteUser": "root"
}